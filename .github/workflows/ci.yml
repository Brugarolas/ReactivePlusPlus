name: CI

on:
  push:
    branches:
    - main
    - v2_1

  pull_request:
    branches:
    - main

jobs:
  coverage:
    name: Test Coverage

    timeout-minutes: 10
    runs-on: ubuntu-latest
    if: github.repository_owner == 'victimsnino'

    steps:
    - uses: actions/checkout@v3

    - name: Install LCov
      run: sudo apt-get update -q && sudo apt-get install lcov -q -y

    - name: Run CMake
      uses: lukka/run-cmake@v10
      with:
        configurePreset: ci-coverage
        buildPreset: ci-build
        testPreset: ci-tests

    - name: Process coverage info
      run: cmake --build build -t coverage

    - name: Submit to codecov.io
      uses: codecov/codecov-action@v3
      with:
        file: build/coverage.info

  sanitize:
    strategy:
      matrix:
        sanitizer: ["tsan", "asan", "lsan", "msan", "ubsan"]

    name: Sanitize - ${{ matrix.sanitizer }}
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3

    - name: Run CMake
      uses: lukka/run-cmake@v10
      with:
        configurePreset: ci-sanitize-${{ matrix.sanitizer }}
        buildPreset: ci-build
        testPreset: ci-sanitize

  tests:
    strategy:
      matrix:
        config: [{name: ci-ubuntu-gcc,  os: ubuntu-latest},
                {name: ci-ubuntu-clang,os: ubuntu-latest},
                {name: ci-windows,     os: windows-latest},
                {name: ci-macos,       os: macos-latest}]
        type: [tests]

    timeout-minutes: 20
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.type }} ${{ matrix.config.name }}

    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0

    - name: Install deps
      if: matrix.config.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -q && sudo apt-get install clang-tidy cppcheck -y -q
        pip install pyyaml

    - name: Run CMake
      uses: lukka/run-cmake@v10
      with:
        configurePreset: ${{ matrix.config.name }}-${{ matrix.type }}
        buildPreset: ci-build
        testPreset: ci-tests

    - name: Analyze diff with clang-tidy
      if: matrix.config.name == 'ci-ubuntu-clang' && github.event_name != 'push' && matrix.type == 'tests'
      run: |
        mkdir clang-tidy-result
        git diff -U0 origin/main | clang-tidy-diff -j 0 -p1 -path build -export-fixes clang-tidy-result/fixes.yml -extra-arg=-std=c++20 -checks=bugprone-*,concurrency-*,performance-*

    - name: Upload clang-tidy results
      uses: actions/upload-artifact@v3
      if: matrix.config.name == 'ci-ubuntu-clang' && github.event_name != 'push' && matrix.type == 'tests'
      with:
        name: clang-tidy-result
        path: clang-tidy-result/fixes.yml
